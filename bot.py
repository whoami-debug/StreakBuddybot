import asyncio
import logging
import json
from datetime import datetime, timezone
from typing import Optional, Dict, List
from pathlib import Path

from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command, CommandObject
from aiogram.enums import ChatType
from aiogram.types import Message, WebAppInfo, InlineKeyboardButton, InlineKeyboardMarkup, BotCommand
from aiohttp import web

from database import Database
from config import BOT_TOKEN, WEBAPP_URL

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
db = Database()

# –ü—É—Ç—å –∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
WEBAPP_PATH = Path(__file__).parent / "webapp"

# –°–æ–∑–¥–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
routes = web.RouteTableDef()

@routes.get('/')
async def serve_webapp(request):
    return web.FileResponse(WEBAPP_PATH / 'index.html')

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
# –§–æ—Ä–º–∞—Ç: {user_id: {partner_username: partner_id}}
dm_partners: Dict[int, Dict[str, int]] = {}

def get_days_word(days: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞ '–¥–µ–Ω—å'"""
    if days % 100 in [11, 12, 13, 14]:
        return "–¥–Ω–µ–π"
    if days % 10 == 1:
        return "–¥–µ–Ω—å"
    if days % 10 in [2, 3, 4]:
        return "–¥–Ω—è"
    return "–¥–Ω–µ–π"

async def setup_bot_commands():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ –¥–ª—è –º–µ–Ω—é"""
    commands = [
        BotCommand(
            command="start",
            description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"
        ),
        BotCommand(
            command="webapp",
            description="–û—Ç–∫—Ä—ã—Ç—å —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–±—â–µ–Ω–∏—è"
        ),
        BotCommand(
            command="streaks",
            description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ —Å–µ—Ä–∏–∏ –æ–±—â–µ–Ω–∏—è"
        ),
        BotCommand(
            command="help",
            description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞"
        )
    ]
    await bot.set_my_commands(commands)

@dp.message(Command("start"))
async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await db.add_user(
        user_id=message.from_user.id,
        username=message.from_user.username or str(message.from_user.id)
    )
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    webapp_button = InlineKeyboardButton(
        text="üì± –û—Ç–∫—Ä—ã—Ç—å —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
        web_app=WebAppInfo(url=WEBAPP_URL)
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[webapp_button]])
    
    if message.chat.type == ChatType.PRIVATE:
        await message.answer(
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–±—â–µ–Ω–∏—è.\n\n"
            "üì± –¢–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å —É–¥–æ–±–Ω—ã–π –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:\n"
            "‚Ä¢ –í—ã–±–∏—Ä–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏–∑ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤\n"
            "‚Ä¢ –û—Ç–º–µ—á–∞–π—Ç–µ –æ–±—â–µ–Ω–∏–µ –æ–¥–Ω–∏–º –Ω–∞–∂–∞—Ç–∏–µ–º\n"
            "‚Ä¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:",
            reply_markup=keyboard
        )
    else:
        await message.answer(
            "‚ú® –ë–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ!\n\n"
            "‚Ä¢ –Ø –±—É–¥—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –æ–±—â–µ–Ω–∏–µ –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏\n"
            "‚Ä¢ –°–µ—Ä–∏—è –æ–±—â–µ–Ω–∏—è –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –¥–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø–∏—à—É—Ç –≤ –æ–¥–∏–Ω –¥–µ–Ω—å\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /streaks —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ —Å–µ—Ä–∏–∏ –æ–±—â–µ–Ω–∏—è"
        )

@dp.message(Command("webapp"))
async def cmd_webapp(message: Message):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞"""
    if message.chat.type != ChatType.PRIVATE:
        await message.answer("‚ö†Ô∏è –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º.")
        return
    
    webapp_button = InlineKeyboardButton(
        text="üì± –û—Ç–∫—Ä—ã—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
        web_app=WebAppInfo(url=WEBAPP_URL)
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[webapp_button]])
    
    await message.answer(
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–±—â–µ–Ω–∏—è:",
        reply_markup=keyboard
    )

@dp.message(lambda message: message.web_app_data is not None)
async def handle_webapp_data(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        data = json.loads(message.web_app_data.data)
        action = data.get('action')
        
        if action == 'mark_today':
            # –û—Ç–º–µ—á–∞–µ–º –æ–±—â–µ–Ω–∏–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
            user_id = message.from_user.id
            today = datetime.now(timezone.utc).date()
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤
            streaks = await db.get_user_streaks(user_id, user_id)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º user_id –∫–∞–∫ chat_id
            for username, _ in streaks:
                partner_id = await db.get_user_id_by_username(username)
                if partner_id:
                    await db.mark_message(user_id, partner_id, today)
            
            await message.answer("‚úÖ –û–±—â–µ–Ω–∏–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è –æ—Ç–º–µ—á–µ–Ω–æ!")
            
        elif action == 'select_user':
            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            pass
            
    except json.JSONDecodeError:
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.")

@dp.message(Command("help"))
async def cmd_help(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞"""
    if message.chat.type == ChatType.PRIVATE:
        await message.answer(
            "üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞\n\n"
            "ü§ù –ö–∞–∫ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ:\n"
            "1. –ù–∞–ø–∏—à–∏—Ç–µ /chat @username –≤–∞—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞\n"
            "2. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –Ω–∞–ø–∏—Å–∞—Ç—å /chat @–≤–∞—à_username\n"
            "3. –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ –±–æ—Ç—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å\n\n"
            "üìä –ö–∞–∫ —Å—á–∏—Ç–∞—é—Ç—Å—è —Å—Ç—Ä–∏–∫–∏:\n"
            "‚Ä¢ –î–µ–Ω—å –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –æ–±–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –Ω–∞–ø–∏—Å–∞–ª–∏ –±–æ—Ç—É\n"
            "‚Ä¢ –ï—Å–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–µ–Ω—å - —Å—Ç—Ä–∏–∫ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è\n"
            "‚Ä¢ –ú–æ–∂–Ω–æ –æ–±—â–∞—Ç—å—Å—è —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ª—é–¥—å–º–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ\n\n"
            "üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/chat @username - –Ω–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –æ–±—â–µ–Ω–∏–µ\n"
            "/streaks - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ —Å–µ—Ä–∏–∏ –æ–±—â–µ–Ω–∏—è\n"
            "/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
            "üéØ –°–æ–≤–µ—Ç—ã:\n"
            "‚Ä¢ –ü–∏—à–∏—Ç–µ –±–æ—Ç—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Å—Ç—Ä–∏–∫–∞\n"
            "‚Ä¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –æ –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö\n"
            "‚Ä¢ –í –≥—Ä—É–ø–ø–∞—Ö –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
        )
    else:
        await message.answer(
            "üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–∞—Ö\n\n"
            "‚Ä¢ –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –æ–±—â–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
            "‚Ä¢ –°—Ç—Ä–∏–∫ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –¥–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø–∏—à—É—Ç –≤ –æ–¥–∏–Ω –¥–µ–Ω—å\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /streaks –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—à–∏—Ö —Å–µ—Ä–∏–π –æ–±—â–µ–Ω–∏—è\n"
            "‚Ä¢ –ü—Ä–∏ –ø—Ä–æ–ø—É—Å–∫–µ –¥–Ω—è —Å—Ç—Ä–∏–∫ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è"
        )

@dp.message(Command("chat"))
async def cmd_chat(message: Message, command: CommandObject):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–±—â–µ–Ω–∏—è"""
    if message.chat.type != ChatType.PRIVATE:
        await message.answer(
            "‚ö†Ô∏è –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º."
        )
        return

    if not command.args:
        await message.answer(
            "‚ÑπÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n"
            "–ü—Ä–∏–º–µ—Ä: /chat @username"
        )
        return

    user_id = message.from_user.id
    target_username = command.args.strip('@')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—ã—Ç–∞–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Å–∞–º —Å–µ–±—è
    if message.from_user.username and target_username == message.from_user.username:
        await message.answer("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–∞–º–∏ —Å–µ–±—è.")
        return
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤
    if user_id not in dm_partners:
        dm_partners[user_id] = {}
    
    dm_partners[user_id][target_username] = None  # None –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –º—ã –µ—â—ë –Ω–µ –∑–Ω–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    await message.answer(
        f"‚úÖ –û—Ç–ª–∏—á–Ω–æ! –Ø –±—É–¥—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–∞—à–µ –æ–±—â–µ–Ω–∏–µ —Å @{target_username}.\n\n"
        f"üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n"
        f"1. –ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å\n"
        f"2. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ @{target_username} –Ω–∞–ø–∏—Å–∞—Ç—å:\n"
        f"   /chat @{message.from_user.username or str(user_id)}\n\n"
        f"üéØ –°—Ç—Ä–∏–∫ –Ω–∞—á–Ω—ë—Ç —Å—á–∏—Ç–∞—Ç—å—Å—è, –∫–æ–≥–¥–∞ –≤—ã –æ–±–∞ –Ω–∞–ø–∏—à–µ—Ç–µ –º–Ω–µ –≤ –æ–¥–∏–Ω –¥–µ–Ω—å!"
    )

@dp.message(Command("streaks"))
async def cmd_streaks(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ —Å–µ—Ä–∏–∏ –æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = message.from_user.id
    chat_id = message.chat.id
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
    await db.add_user(
        user_id=user_id,
        username=message.from_user.username or str(user_id)
    )
    
    streaks = await db.get_user_streaks(user_id, chat_id)
    if not streaks:
        await message.answer(
            "üìä –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Ä–∏–π –æ–±—â–µ–Ω–∏—è –≤ —ç—Ç–æ–º —á–∞—Ç–µ.\n\n"
            "‚Ä¢ –í –ª–∏—á–∫–µ: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /chat @username\n"
            "‚Ä¢ –í –≥—Ä—É–ø–ø–µ: –ø—Ä–æ—Å—Ç–æ –æ–±—â–∞–π—Ç–µ—Å—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å"
        )
        return

    response = "üìä –í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ —Å–µ—Ä–∏–∏ –æ–±—â–µ–Ω–∏—è:\n\n"
    for username, streak in streaks:
        days_word = get_days_word(streak)
        response += f"‚Ä¢ @{username}: {streak} {days_word} –ø–æ–¥—Ä—è–¥\n"
    
    # –í –≥—Ä—É–ø–ø–µ –æ—Ç–≤–µ—á–∞–µ–º —Å —Ç–µ–≥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if message.chat.type != ChatType.PRIVATE:
        user_mention = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        response = f"{user_mention}, –≤–æ—Ç –≤–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n" + response.strip()
    
    await message.answer(response.strip())

@dp.message()
async def handle_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–∞—Ö
    if message.chat.type != ChatType.PRIVATE and (
        message.new_chat_members is not None or 
        message.left_chat_member is not None or
        message.new_chat_title is not None or
        message.new_chat_photo is not None or
        message.delete_chat_photo is not None or
        message.group_chat_created is not None or
        message.supergroup_chat_created is not None or
        message.channel_chat_created is not None or
        message.message_auto_delete_timer_changed is not None or
        message.pinned_message is not None
    ):
        return

    user_id = message.from_user.id
    username = message.from_user.username or str(user_id)
    chat_id = message.chat.id
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
    await db.add_user(user_id, username)
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    if message.chat.type == ChatType.PRIVATE:
        if user_id in dm_partners and dm_partners[user_id]:
            today = datetime.now(timezone.utc).date()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
            for partner_username, partner_id in dm_partners[user_id].items():
                if partner_id is not None:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤
                    await db.mark_message(user_id, partner_id, today)
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–Ω–∏–µ
                    streak_updates = await db.check_streaks(user_id, partner_id, today)
                    for other_username, streak, is_new_streak in streak_updates:
                        if is_new_streak:
                            days_word = get_days_word(streak)
                            await message.answer(
                                f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!\n"
                                f"–í—ã –∏ @{other_username} –æ–±—â–∞–µ—Ç–µ—Å—å —É–∂–µ {streak} {days_word} –ø–æ–¥—Ä—è–¥!"
                            )
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    else:
        # –û—Ç–º–µ—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
        today = datetime.now(timezone.utc).date()
        await db.mark_message(user_id, chat_id, today)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        streak_updates = await db.check_streaks(user_id, chat_id, today)
        
        for other_username, streak, is_new_streak in streak_updates:
            if is_new_streak:
                user_mention = f"@{username}" if username != str(user_id) else message.from_user.first_name
                other_mention = f"@{other_username}"
                days_word = get_days_word(streak)
                await message.answer(
                    f"üéâ {user_mention} –∏ {other_mention} –æ–±—â–∞—é—Ç—Å—è —É–∂–µ {streak} {days_word} –ø–æ–¥—Ä—è–¥!"
                )

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    await db.init()
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
    await setup_bot_commands()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
    app = web.Application()
    app.add_routes(routes)
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, 'localhost', 8080)
    await site.start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main()) 